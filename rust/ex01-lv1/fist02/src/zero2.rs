pub fn immutable_and_mutable_references2() {
    // 불변 참조와 가변 참조의 동시 사용 금지
    // 러스트에서는 동일한 데이터에 대해 동시에 불변 참조와 가변 참조를 가질 수 없음
    // 데이터 경쟁을 방지하기 위한 러스트의 안전장치
    let mut z = 30;

    // 불변 참조 생성
    let r1 = &z;
    let r2 = &z;

    // 불변 참조가 있는 동안에는 가변 참조 생성 불가
    // let r3 = &mut z; // 컴파일 에러
    // 데이터 일관성 보장
    println!("r1: {}", r1);
    println!("r2: {}", r2);

    // 가변 참조의 단일성
    // 가변 참조는 하나만 있을 수 있음, 여러 개의 가변 참조가 있을 경우
    // 데이터 경쟁이 생길 수 있기 때문
    let mut a = 40;
    let mr1 = &mut a;
    println!("mr1: {}", mr1);
    // let mr2 = &mut a; // 컴파일 에러
    // 가변 참조 r1을 통해 a 값 변경
    *mr1 += 5;
    println!("mr1: {}", mr1);

    // 불변 참조는 여러개 있을 수 있지만
    // 가변 참조는 하나만 있어야 한다.
}
